---
import { CollectionEntry, getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import PageLayout from "../../layouts/PageLayout.astro";
import PostCard from "../../components/PostCard.astro";
import getUniqueTags from "../../utils/getUniqueTags";
import getPostsByTag from "../../utils/getPostsByTag";
import { slugifyPost } from "../../utils/slugify";
import { SITE_TITLE, SITE_CDN } from "../../consts";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");

  const tags = getUniqueTags(posts);

  return tags.map((tag) => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);

const tagPosts = getPostsByTag(posts, tag);

const ogImage = SITE_CDN + 'social-share.png';
---

<PageLayout>
  <BaseHead
    title={`Tag: ${tag} - Articles | ${SITE_TITLE}`}
    description={`A repository of all the things I written with a tag of ${tag} on the article`}
    image={ogImage}
  />
  <Fragment slot="main">
    <div>
      <h1 class="mt-7 text-3xl font-medium">Tag: {tag}</h1>
      <p class="mt-8 text-lg">All Articles with the tag: {tag}</p>
      <ul>
        {
          tagPosts.map(({ data }) => (
            <PostCard href={`/blog/${slugifyPost(data)}`} frontmatter={data} />
          ))
        }
      </ul>
    </div>
  </Fragment>
</PageLayout>
